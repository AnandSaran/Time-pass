apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'androidx.navigation.safeargs'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.adroit.timepass"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 3
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            keyAlias 'timepass'
            keyPassword 'timepass2020'
            storeFile file('../timepass.jks')
            storePassword 'timepass2020'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "dev, prod"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Time pass DEV"
            buildConfigField "String", "BASEURL", "\"http://timepass.net.in/app-api/\""
        }
        prod {
            resValue "string", "app_name", "Time pass"
            buildConfigField "String", "BASEURL", "\"http://timepass.net.in/app-api/\""
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "androidx.core:core-ktx:$version_core"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_architecture"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_architecture"

    //Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"

    //vector drawable
    implementation "androidx.vectordrawable:vectordrawable:$version_vector_drawable"

    //constraint layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui:$version_navigation"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$version_navigation"

    //Paging
    implementation "androidx.paging:paging-runtime:$version_paging"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$version_navigation_compose"

    //fragment
    implementation "androidx.fragment:fragment-ktx:$version_fragment_ktx"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$version_moshi"

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$version_okhttp"

    // ViewModel and LiveData (arch components)
    //implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_architecture"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_architecture"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_architecture"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$version_architecture"

    // Co routines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // exoplayer
    implementation "com.google.android.exoplayer:exoplayer:$version_exoplayer"
    implementation "com.google.android.exoplayer:exoplayer-ui:$version_exoplayer"

    //country code picker
    implementation "com.hbb20:ccp:$version_country_code_picker"

    //progress bar
    implementation "com.wang.avi:library:$version_av_loading_indicator"

    //viewpager 2
    implementation "androidx.viewpager2:viewpager2:$version_viewpager_two"

    // Import the Firebase BoM
    implementation platform("com.google.firebase:firebase-bom:$version_firebase_bom")

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //firebase auth
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation "androidx.browser:browser:$version_browser"

    //permission
    implementation "gun0912.ted:tedpermission-rx2:$version_ted_permission"

    //crop
    implementation "com.github.yalantis:ucrop:$version_image_crop"
    implementation 'com.github.MasayukiSuda:Mp4Composer-android:v0.4.1'

    //image compress
    implementation "id.zelory:compressor:$version_image_compressor"

    //video crop
    implementation "com.github.Ahmedbadereldin:Video-Trimmer-Android:$version_video_trimmer"

    implementation 'org.koin:koin-android:2.0.1'
    implementation 'org.koin:koin-androidx-scope:2.0.1'
    implementation 'org.koin:koin-androidx-viewmodel:2.0.1'
    // Ktor for Android
    implementation "io.ktor:ktor-client-android:1.2.5"
// Ktor JVM(necessary for logging extension)
    implementation "io.ktor:ktor-client-logging-jvm:1.2.5"
// Ktor Logging extension
    implementation "io.ktor:ktor-client-logging:1.2.5"
// Necessary to show logs in logcat
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "androidx.work:work-runtime-ktx:$version_work"

    testImplementation "junit:junit:$version_junit"
    androidTestImplementation "androidx.test.ext:junit:$version_test_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_test_espresso"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$version_navigation"
}
