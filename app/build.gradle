apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.gregantech.timepass"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            keyAlias 'timepass'
            keyPassword 'timepass2020'
            storeFile file('../timepass.jks')
            storePassword 'timepass2020'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "dev, prod"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Time pass DEV"
            buildConfigField "String", "BASEURL", "\"http://timepass.net.in/app-api/\""
        }
        prod {
            applicationIdSuffix ".prd"
            resValue "string", "app_name", "Time pass"
            buildConfigField "String", "BASEURL", "\"http://timepass.net.in/app-api/\""
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "androidx.core:core-ktx:$version_core"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_architecture"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_architecture"

    //Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"

    //vector drawable
    implementation "androidx.vectordrawable:vectordrawable:$version_vector_drawable"

    //constraint layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui:$version_navigation"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$version_navigation"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$version_navigation_compose"

    //fragment
    implementation "androidx.fragment:fragment-ktx:$version_fragment_ktx"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$version_moshi"

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$version_okhttp"

    // ViewModel and LiveData (arch components)
    //implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_architecture"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_architecture"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_architecture"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$version_architecture"

    // Co routines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // exoplayer
    implementation "com.google.android.exoplayer:exoplayer:$version_exoplayer"
    implementation "com.google.android.exoplayer:exoplayer-ui:$version_exoplayer"

    testImplementation "junit:junit:$version_junit"
    androidTestImplementation "androidx.test.ext:junit:$version_test_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_test_espresso"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$version_navigation"
}
